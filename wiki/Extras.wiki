#summary Extras provided by markdown2.py
#labels Featured

This page described the extra features (additional syntax, etc.) over the core
functionality (as defined by
http://daringfireball.net/projects/markdown/syntax) that `markdown2.py`
provides.

These are all *off* by default and turned on as follows on the command line:

{{{
python markdown2.py --extras name1,name2 ...
}}}

and via the module interface:

{{{
>>> import markdown2
>>> html = markdown2.markdown_path(path, ..., extras=["name1", "name2"])
>>> html = markdown2.markdown("some markdown", ..., extras=["name1", "name2"])

>>> markdowner = Markdown(..., extras=["name1", "name2"])
>>> markdowner.convert("*boo!*")
<em>boo!</em>
}}}


= code-friendly =

This extra *disables* the use of leading and trailing `_` and `__` for emphasis
and strong. These can easily get in the way when writing docs about source code
with `variable_list_this` and when one is not careful about quoting.

{{{
>>> markdown2.markdown("use 'self.this_long_attr' for the *real* mccoy")
"<p>use 'self.this<em>long</em>attr' for the <em>real</em> mccoy</p>\n"
>>> markdown2.markdown("use 'self.this_long_attr' for the *real* mccoy",
...                    extras=["code-friendly"])
"<p>use 'self.this_long_attr' for the <em>real</em> mccoy</p>\n"
}}}


= footnotes =

Support for footnotes with the following syntax:

{{{
This is a paragraph with a footnote. [^note-id]

[^note-id]: This is the text of the note. 
}}}

Which produces HTML like this:

{{{
<p>This is a paragraph with a footnote. 
<sup class="footnote-ref" id="fnref-note-id">
<a href="#fn-note-id">1</a></sup> 
</p>

...
<div class="footnotes">
<hr />
<ol>
<li id="fn-note-id">
<p>This is the text of the note.&nbsp;
<a href="#fnref-note-id" class="footnoteBackLink" title="Jump back to footnote 1 in the text.">&#8617;</a></p>
</li>

<li>...for subsequent footnotes
</li>
</ol>
</div>
}}}


This is as close as I can tell is the favoured output from the following sources:

  * http://daringfireball.net/2005/07/footnotes
  * http://six.pairlist.net/pipermail/markdown-discuss/2005-August/001442.html
  * http://six.pairlist.net/pipermail/markdown-discuss/2005-August/001480.html

Notes:

  * I couldn't tell from the markdown-discuss discussion on footnotes whether John Gruber meant that the current date was added as a suffix to the anchors in his private Markdown.pl or whether he was literally putting in the "YYYY-MM-DD" strings in his markdown text.
  * Daringfireball.net (John Gruber's) site uses the "footnoteBackLink" class on the backref `<a>`. Also, he does *not* add the `class="footnote-ref"` on `<sup>`. Neither of these jive with [http://six.pairlist.net/pipermail/markdown-discuss/2005-August/001480.html what was described here].
  * Add hooks/variables on the `Markdown` class to allow easy tweaking of this output above.

[http://code.google.com/p/python-markdown2/issues/detail?id=1 Patch] partly
from Adam Gomaa (thanks Adam!).



= code-color =

Pygments-based syntax coloring (patch from Adam).

TODO: describe (this has been checked in now, use the source Luke! :)



= link-patterns =

The "link-patterns" extra enables mapping of given regex patterns in text to
links. The `link_patterns` list on the `Markdown` class provides
the mapping.  

For example, the following with map "recipe NNNN" and "komodo bug NNNN" to
appropriate links:

{{{
>>> import markdown2, re
>>> link_patterns = [
...    (re.compile("recipe\s+(\d+)", re.I), r"http://code.activestate.com/recipes/\1/"),
...    (re.compile("(?:komodo\s+)?bug\s+(\d+)", re.I), r"http://bugs.activestate.com/show_bug.cgi?id=\1"),
... ]
>>> markdown2.markdown('Recipe 123 and Komodo bug 234 are related.'
...     extras=["link-patterns"], link_patterns=link_patterns)
'<p><a href="http://code.activestate.com/recipes/123/">Recipe 123</a> and \
<a href="http://bugs.activestate.com/show_bug.cgi?id=234">Komodo bug 234</a> are related.</p>'
}}}


== link patterns file ==

Via the command-line interface the `--link-patterns-file` option has been
added.  A "link patterns file" (which can be passed in on the command line) has
on link pattern per line of the form:

{{{
<regex-pattern> <href-pattern>
}}}

For example:

{{{
/recipe\s+(\d+)/i               http://code.activestate.com/recipes/\1/
/(?:komodo\s+)?bug\s+(\d+)/i    http://bugs.activestate.com/show_bug.cgi?id=\1
}}}

Spaces are not allowed in the `<href-pattern>` (to simplify parsing). Lines
beginning with a hash (#) are comments.

{{{
$ python markdown2.py -x link-patterns --link-patterns-file patterns foo.text
}}}



= extras to add =

  * smartypants
  * see a lot more in TODO.txt
